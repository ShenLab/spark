.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Genet::File::VCF 3"
.TH Genet::File::VCF 3 "2020-03-03" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Genet::File::VCF \- Parsing VCF file.
.SH "VERSION"
.IX Header "VERSION"
Version 0.01
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Genet::File::VCF;
\&    use Perl6::Slurp;
\&
\&    my %pedline = map { my @row = split; $row[1] => [@row] } slurp "CDH_MGH.ped";
\&
\&    my $vcf = Genet::File::VCF\->new("$ENV{HOME}/temp/CDH_MGH_VQSR.vcf.gz");
\&
\&    my @samps = grep { /^\ed+$/ } $vcf\->get_sampids;
\&
\&    my $vit = $vcf\->iter({strict => 1, samp => \e@samps, region => "20:43000000\-63000000"});
\&
\&    my $writer = Genet::File::BPed\->new("$ENV{HOME}/Temp/DH_MGH_VQSR",
\&                  {samp => [map { $pedline{$_} } @samps], write => 1});
\&
\&    while(my ($site, $geno) = $vit\->()) {
\&
\&        my $varid = "$site\->{CHROM}_$site\->{POS}_$site\->{REF}_$site\->{ALT}[0]";
\&        $site\->{ID} = $varid;
\&
\&        next unless scalar(@{$site\->{ALT}}) == 1 && $site\->{FILTER}[0] eq \*(AqPASS\*(Aq;
\&
\&        my %geno; 
\&        while(my ($iid, $gdat) = each %$geno) {
\&            if (defined $gdat\->{GT}) {
\&                my $gct = sum( split(q|/|, $gdat\->{GT}) );
\&                croak "Incorrect number of ref allele count" unless $gct >= 0 && $gct <= 2;
\&                $geno{$iid} = 2\-$gct;
\&        }
\&        else {
\&             $geno{$iid} = undef;
\&        }
\&    }
\&
\&    $writer\->write_next([$site\->{CHROM},$site\->{ID},0,$site\->{POS},$site\->{ALT}[0],$site\->{REF}],\e%geno);
\&}
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The main functionality of this module is to read and write (limited) the \s-1VCF\s0 file.
The performance is slow because it unpack all the information stored in aline.
.PP
See also Vcf distributed with VCFtools for more functionailities.
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
.SS "new \s-1FILE\s0 [, \s-1OPTIONS\s0]"
.IX Subsection "new FILE [, OPTIONS]"
Create a new \s-1VCF\s0 file reader object.
.PP
\&\s-1FILE\s0 can be a file or file handle. In the latter case, it only supports sequential reading
from the beginning.
.SS "Helper Functions"
.IX Subsection "Helper Functions"
\fIparse_vcf_header \s-1FILE\s0\fR
.IX Subsection "parse_vcf_header FILE"
.PP
.Vb 2
\&  Return header, sample names, and field information from VCF file or file handle.
\&  The field information will extract from FILTER/FORMAT/INFO.
.Ve
.PP
\fIslurp_vcf_header \s-1FILE\s0\fR
.IX Subsection "slurp_vcf_header FILE"
.PP
.Vb 2
\&  Return header, and a list of sample names from VCF file or file handle. 
\&  It did not parse header information fields.
.Ve
.SS "list_vqsr_filter {\s-1TYPE\s0 => \s-1THRESHOLD\s0}"
.IX Subsection "list_vqsr_filter {TYPE => THRESHOLD}"
.Vb 3
\&   Given threshold and variant type, list all GATK\*(Aqs VQSR filters that PASS (<=) the threshold.
\&   When VQSR filter flag is absent, it will output only PASS.
\&   Note: the returned list will be filters that will KEEP the variant.
.Ve
.SS "Accessors"
.IX Subsection "Accessors"
get_sampids : get a list of sample IDs
.PP
get_info : get all \s-1INFO\s0 fields
.PP
get_filter : get all \s-1FILTER\s0 labels
.PP
get_format : get all \s-1FORMAT\s0 tags
.SS "get_vcf_fields"
.IX Subsection "get_vcf_fields"
Get standard \s-1VCF\s0 fields plus sample IDs.
.PP
It is possible to provide a subset of samples (including empty list).
.ie n .SS "$self\->iter [\s-1OPTIONS\s0]"
.el .SS "\f(CW$self\fP\->iter [\s-1OPTIONS\s0]"
.IX Subsection "$self->iter [OPTIONS]"
Return an iterator for reading \s-1VCF\s0 file one line at a time.
.PP
The return value of calling the iterator is \s-1SITE, GENO\s0 and \s-1INFO.\s0
If file handle instead of file name is provided to construct object,
then iterator will start from the current position of stored file handle.
.PP
The following fields will be included in site-level information:
\&\f(CW\*(C`CHROM, POS, ID, REF, ALT, QUAL\*(C'\fR, and \f(CW\*(C`FILTER\*(C'\fR, where \f(CW\*(C`ID, ALT\*(C'\fR and \f(CW\*(C`FILTER\*(C'\fR will 
be stored as arrayref to accomondate possible multiple values.
.PP
For genotypes, the returned hash are index by sample IDs. Each value is a hashref
with field names from \s-1FORMAT\s0 definition.
.PP
\fIOptions\fR
.IX Subsection "Options"
.ie n .IP """samp""" 5
.el .IP "\f(CWsamp\fR" 5
.IX Item "samp"
Fetch genotypes for a subset of samples. This only affect the returned genotypes.
Values in the \s-1INFO\s0 will not be recalculated, unless \f(CW\*(C`recalc\*(C'\fR is turned on.
.ie n .IP """recalc""" 5
.el .IP "\f(CWrecalc\fR" 5
.IX Item "recalc"
To recalculate \s-1AC/AN\s0 in the \s-1INFO\s0 field. If \s-1AC/AN\s0 is not defined in the original \s-1VCF,\s0 
then new field will be added.
.Sp
\&\s-1NOTE:\s0 In case the number of observed alleles is less than that in the original \s-1VCF,\s0
it will \s-1NOT\s0 change \s-1ALT\s0 field, because many other fields depend on the number of \s-1ALT\s0
alleles, e.g. \s-1AC.\s0 When this happen, some alleles will have count 0 in \s-1AC\s0 field.
.ie n .IP """strict""" 5
.el .IP "\f(CWstrict\fR" 5
.IX Item "strict"
By default, we do not check against field/info/filter definitions at the header.
It will further slow down the process, but can be enabled by turn on \f(CW\*(C`strict\*(C'\fR option.
.ie n .IP """region""" 5
.el .IP "\f(CWregion\fR" 5
.IX Item "region"
User can also provide a region specification (\*(L"chr:st\-ed\*(R"). Only valid for bgzip'ed \s-1VCF\s0 file.
.ie n .IP """order""" 5
.el .IP "\f(CWorder\fR" 5
.IX Item "order"
Keep original order of \s-1INFO\s0 fields and \s-1FORMAT\s0 tags. This may be useful when write
the information back to \s-1VCF\s0 line.
.ie n .IP """keepline""" 5
.el .IP "\f(CWkeepline\fR" 5
.IX Item "keepline"
Also output original line.
.SS "Functions on Genotypes"
.IX Subsection "Functions on Genotypes"
allele_count \s-1SITE, GENO\s0 [, \s-1SAMP\s0]: re-calculate \s-1AC/AN,\s0 and store it back to the \s-1INFO\s0 fields.
.PP
\&\s-1NOTE:\s0 the optional \s-1SAMP\s0 list can be provided when calculating allele count.
.SS "self\->create_vcf_line \s-1SITE, GENO\s0 [, \s-1OPTIONS\s0]"
.IX Subsection "self->create_vcf_line SITE, GENO [, OPTIONS]"
Return a \s-1VCF\s0 line for writing.
.PP
Optionally specify the format fields, info fields, and subset of samples.
.SH "AUTHOR"
.IX Header "AUTHOR"
Xueya Zhou, \f(CW\*(C`<xueyazhou at gmail.com>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-genet at rt.cpan.org\*(C'\fR, or through
the web interface at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Genet>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Genet::File::VCF
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker (report bugs here)
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Genet>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Genet>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Genet>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Genet/>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2018 Xueya Zhou.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of the the Artistic License (1.0). You may obtain a
copy of the full license at:
.PP
<http://www.perlfoundation.org/artistic_license_1_0>
.PP
Aggregation of this Package with a commercial distribution is always
permitted provided that the use of this Package is embedded; that is,
when no overt attempt is made to make this Package's interfaces visible
to the end user of the commercial distribution. Such use shall not be
construed as a distribution of this Package.
.PP
The name of the Copyright Holder may not be used to endorse or promote
products derived from this software without specific prior written
permission.
.PP
\&\s-1THIS PACKAGE IS PROVIDED \*(L"AS IS\*(R" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.\s0
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 555:" 4
.IX Item "Around line 555:"
You forgot a '=back' before '=head2'
