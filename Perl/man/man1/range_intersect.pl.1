.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RANGE_INTERSECT 1"
.TH RANGE_INTERSECT 1 "2020-08-07" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
range_intersect.pl \-\- Finding overlap genomic features.
.SH "NOTES"
.IX Header "NOTES"
This is the inhouse implementation of BEDtools' intersect utility with that allows more flexible 
input file formats.
.SH "REQUIRED ARGUMENTS"
.IX Header "REQUIRED ARGUMENTS"
.IP "\-[\-]a[file] [=] <file>" 4
.IX Item "-[-]a[file] [=] <file>"
File \*(L"A\*(R", use \*(L"\-\*(R" if passing A from stdin.
.IP "\-[\-]b[file] [=] <file>" 4
.IX Item "-[-]b[file] [=] <file>"
File \*(L"B\*(R", use \*(L"\-\*(R" if passing B from stdin. But only one of A or B can be read from stdin.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-[\-]out[put] [=] <file>" 4
.IX Item "-[-]out[put] [=] <file>"
The output file name. If not provided, will write to \s-1STDOUT.\s0
.IP "\-[\-]with\-b [=] [<prefix>]" 4
.IX Item "-[-]with-b [=] [<prefix>]"
Also output fields in file B. Optionally adding prefix to column names from file B.
.IP "\-[\-]with\-loj" 4
.IX Item "-[-]with-loj"
Output all entries in A regardless of their overlap with B, \*(L"Left outer join\*(R".
Can only be used together with \-\-with\-b.
.IP "\-[\-]with\-calc [=] [<prefix>]" 4
.IX Item "-[-]with-calc [=] [<prefix>]"
Also output calculated fields of overlapping length and fractions.
Currently, there are four calculated fields: iLen, fA, fB, fAxfB. An optional prefix can be added to
these calculated fields. It must be used together with \-\-with\-b. But Both \-\-with\-b and \-\-with\-calc 
will be inactivated if \-\-negative is switchd on.
.IP "\-[\-]with\-first" 4
.IX Item "-[-]with-first"
Only output first matched entry in file B. Must be used together with \-\-with\-b.
The entry in B that have the largest overlap (pT*pQ) will be shown in the output.
.IP "\-[\-]ndigit [=] <num>" 4
.IX Item "-[-]ndigit [=] <num>"
Number of digits for calculated numerical values.
.IP "\-[\-]match [=] <fpairs>" 4
.IX Item "-[-]match [=] <fpairs>"
Matching values of specified field pairs in A and B files. Field pairs should be comma separated,
fields in A and B should be joined by colon. For example: \s-1IID:IID\s0,Type:CNType will match values of 
\&\s-1IID\s0 and Type from A file with values of \s-1IID\s0 and CNType in B file. Field names used for matching
are renamed field names if files fields have been renamed.
.IP "\-[\-]neg[ative]" 4
.IX Item "-[-]neg[ative]"
Instead of extracting overlapping regions, reverse the operation to output non-overlapping regions.
with-b, with-loj and with-calc will be disabled under negative mode. If fields matching is enabled,
negative mode will also output overlapping regions that not matching specified fields.
.IP "\-[\-]select [=] <string>" 4
.IX Item "-[-]select [=] <string>"
Selected fields to appear in the output.
.IP "\-[\-]select\-pattern [=] <regex>" 4
.IX Item "-[-]select-pattern [=] <regex>"
Select fields that match the provided regex.
.IP "\-[\-]a[\-]fields [=] <fstr>" 4
.IX Item "-[-]a[-]fields [=] <fstr>"
Specify key fields (Chrom,Start,End) in A file. When alias is used, they must be renamed field names.
If files have .bed suffix and fields are not specified, then we will assume they are bed format.
.IP "\-[\-]a\-select [=] <fstr>" 4
.IX Item "-[-]a-select [=] <fstr>"
Select and rename fields in A file.
.IP "\-[\-]a\-alias [=] <fstr>" 4
.IX Item "-[-]a-alias [=] <fstr>"
Rename selected fields in A file. Example: 1:Chrom,2:Start,3:End.
If original field names are all digit, file will be assumed to have no header.
.IP "\-[\-]a\-bed" 4
.IX Item "-[-]a-bed"
Indicate that file A has \s-1BED\s0 style genomic intervals.
.IP "\-[\-]a\-skip [=] <nrow>" 4
.IX Item "-[-]a-skip [=] <nrow>"
.PD 0
.IP "\-[\-]a\-fsep [=] <regex>" 4
.IX Item "-[-]a-fsep [=] <regex>"
.IP "\-[\-]a\-sheet [=] <number>" 4
.IX Item "-[-]a-sheet [=] <number>"
.IP "\-[\-]a\-maxrow [=] <number>" 4
.IX Item "-[-]a-maxrow [=] <number>"
.IP "\-[\-]a\-maxcol [=] <number>" 4
.IX Item "-[-]a-maxcol [=] <number>"
.PD
Options for paring A file.
.IP "\-[\-]b[\-]fields [=] <fstr>" 4
.IX Item "-[-]b[-]fields [=] <fstr>"
Specify key fields in B file.
.IP "\-[\-]b\-select [=] <fstr>" 4
.IX Item "-[-]b-select [=] <fstr>"
Select and rename fiels in B file.
.IP "\-[\-]b\-alias [=] <fstr>" 4
.IX Item "-[-]b-alias [=] <fstr>"
Rename selected fields in B file.
.IP "\-[\-]b\-bed" 4
.IX Item "-[-]b-bed"
Indicate that file B has \s-1BED\s0 style genomic intervals.
.IP "\-[\-]b\-skip [=] <nrow>" 4
.IX Item "-[-]b-skip [=] <nrow>"
.PD 0
.IP "\-[\-]b\-fsep [=] <regex>" 4
.IX Item "-[-]b-fsep [=] <regex>"
.IP "\-[\-]b\-sheet [=] <number>" 4
.IX Item "-[-]b-sheet [=] <number>"
.IP "\-[\-]b\-maxrow [=] <number>" 4
.IX Item "-[-]b-maxrow [=] <number>"
.IP "\-[\-]b\-maxcol [=] <number>" 4
.IX Item "-[-]b-maxcol [=] <number>"
.PD
Options for parsing B file.
.IP "\-[\-]a\-over[lap] [=] <perc>" 4
.IX Item "-[-]a-over[lap] [=] <perc>"
Minimial overlap requried as fraction of A.
.IP "\-[\-]b\-over[lap] [=] <perc>" 4
.IX Item "-[-]b-over[lap] [=] <perc>"
Minimal overlap required as fraction of B.
