# Specify ways to calculate per-bp mutation rate
[MutRate]
# Method of getting local context dependent mutation rates.
# Currently, we have implemented two versions of local mutation rate based on sequence context.
# The first method was tri-nucleotide sequence context model, we obtained local rates
# from DenovoNear package ("3merDenovoNear"). The second method was 7mer context model
# in which rates were derived from extremely rare variants from WGS data (Carlson et al. 2019). 
# We obtained rates from Mr-Eel package ("7merMrEel"). 
Method=3merDenovoNear
# Lookup table for local mutation rates
Lookup=/home/xz2680/Dropbox/Data/Genetics/MutRate_3merDenovoNear.txt
# For MrEel, use /home/xz2680/Dropbox/Data/Genetics/MutRate_7merMrEel.txt

# When estimated per-bp mutation rates across genome is available, they can be stored in a tabix DB file
# with five columns: "Chrom,Position,Ref,Alt,Rate" such that each row gives allele specific mutation rate
# at each genomic position. If the position cannot be found in the DB table, it will fall back to use local rate.
#Rate=/Users/xzhou/Dropbox/Data/Genetics/MutRate/DDD2019_ExomeMutRates_20200305.b37.txt.gz

# The rate in the 3mer lookup table has been scaled to roughly match ~1.2e-8 per genome per generation 
# For 7mer rate from MrEel, the module will scale the rate internally by the recommended factor so that
# the genome-wide rate is also ~1.2e-8
# To allow average rate different from ~1.2e-8, we can provide a single scaling factor in Scale. 
# To allow region-specific average mutation rate, scale can also be a bed4 file that gives region-specific 
# scaling factors. When bed4 is provided, for positions that can not be found in the bedgraph, nearest 
# position will be used.
Scale=1

# When using local context to look for mutation rates, genome reference sequence is used to fetch
# sequence context. Or we will make use of "Context" (Format: ACG>AGG) in the annotated variant table.
Fasta=/home/xz2680/Resources/GATK/b37/human_g1k_v37.fasta

# To correct for depth of coverage, we can use weight (0~1) defined at each base pair to adjust reduced
# chances of calling a variant from that position. 
# Weight file should be a tabix indexed database file with three columns: Chrom, Position and Weight.
# It can be generated from callable_merge.pl pipeline.
# If a position cannot be found in the weight file, then it will have zero weight (e.g., no coverage).
Weight=/home/xz2680/Projects/SPARK/201908_30KBAMQC/Callable/DNVs/out/perbase_cov_b37_sorted.txt.gz

# Instead of calculationg mutation rate, the script can also be used to summarize variant counts or rate 
# if MutRate section is remove. Optionally, a weight field in input can be specified
[Input]
# The default is to group variants by GeneID, it can be customized to other fields
GroupID=GeneID
# Weihgt field used to summarize variant rate
Weight=AC
# It is also possible to filter the input based on its annotatioin fields 
Filter='MAPP>0 & SegDup=="."'

# Define variant class or class combination
# Mutation rate will be calculated for each variant class in each gene
[Variant]
Class=LoFSNV
Class_Filter='GeneEff=~"splice_(acceptor|donor)" | GeneEff=="stop_gained"'
Class=Nonsense
Class_Filter='GeneEff=="stop_gained"'
Class=Dmis_MPC2
Class_Filter='GeneEff=="missense" & MPC!="." & MPC>=2.0'
Class=Dmis_CADD25
Class_Filter='GeneEff=="missense" & CADD13!="." & CADD13>=25.0'
Class=Missense
Class_Filter='GeneEff=="missense"'
Class=Silent
Class_Filter='GeneEff=="synonymous" | GeneEff=="start_retained" | GeneEff=="stop_retained"'

# Definition of combinatorial class using simple arithmetics  
# LGD also includes frameshift indels, and we assumed their rate is 1.25x of stop gain. 
Comb=LGD
Comb_Define=1.25*Nonsense+LoFSNV


[Output]
# The output will have one row for each gene, and one column for the mutation rate for each 
# variant class or class combination. The column name for mutation rate will be variant class label
# after adding prefix defined in FieldPref.
FieldPref=Mu_
# Output mutation rates in log10 scale (Y or N)
Log10=N
# NA will only be used when log(0) appears
NAstring=NA
# Additional gene level fields from external reference file
# The first field will be linked to GroupID in input variant table 
GXref=/home/xz2680/Dropbox/Data/GENCODE/GencodeV19GeneTable_HGNC20180722.txt
GXref_Fields=EnsemblID,HGNC,EntrezID,GeneType

[Parallel]
jobs=4

