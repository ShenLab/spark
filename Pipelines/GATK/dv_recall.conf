[INPUT]
# Input variant table file (must be tab separated with field names in the first row)
FILE=XXX
# Fields for IID,CHR,POS,REF,ALT
FIELDS=IID,Chrom,Position,Ref,Alt
# Interval padding around the candidate variants.
PADDING=200

[OUTPUT]
# Output fields for deepvariant re-call (FILTER and QUAL) and nearby variants.
# Nearby variants format: CHR_POS_REF_ALT[Q50]
OUTFIELDS=DeepvarFilter,DeepvarQual,NearbyVars
# Look for nearby variants within this distance 
# Nearby variants can be used for determining parental of origin and resolve multi-nucleotide variants
NEARBY=100

# If pedigree file is provided, we will also re-call other family members
[PED]
# Pedigre file should be "augmented" so that all family members except twin can be determined
# from the relationship specified in PED file alone.
FILE=XXX
# Patterns for technical duplicates
IGNORE='_Re\d*$'
# List of MZ twins
#TWINS=YYY

# (For advanced use only)
# Configs used to fetch data from remote server.
# In case when CRAMs are stored on a server that not directly accessible from local machine,
# we need to fetch chunks of CRAM/BAM files around candidate variants.
# only effective when --local is enabled.
[REMOTE]
# Remote host name, should be configed that can SSH login without password
HOST=Mendel
# Do not test if files exists on remote server
NOTEST=TRUE
# SAMTOOLS and FASTA should be absolute paths on remote server
# they are used to fetch remote files then stream them to local machine
SAMTOOLS=\$HOME/anaconda2/bin/samtools
FASTA=\$HOME/Resources/GATK/b37/human_g1k_v37_decoy.fasta


# (For advanced use only)
# If the genome coordinate in the input file does not match those in the BAM/CRAM files, 
# we need to liftover the genomic coordinates in the input to match the BAM/CRAMs.
# When collecting results from VCFs, we need to liftover the VCFs back to match
# the coordinates in the original input. So two sets of options are required.
[LIFTOVER]
# Chain and option for lifting input variants to match the BAM/CRAM files
# Target FASTA file has already been specified in [PATH] section, it should match
# the target genome of the chain file.
# liftover_vars will be used to convert genomic coordinates
CHAIN=/UCSC/hg19tohg38/liftover/chain
OLDVAR=VarID_hg38
#OPTION=
# Chain, option and FASTA for lifting DeepVariant VCF back to original assembly
# liftover_vcf will be used to convert genomic coordinates in VCFs directly
# Make sure FASTABACK should match target genome specified in chain file.
CHAINBACK=YYY
OPTIONBACK=--hgchr --nochr
FASTABACK=ZZZ


[PATH]
# Fasta and seq dictionary files should match to BAM/CRAM files
FASTA=/home/xz2680/Resources/GATK/b37/human_g1k_v37.fasta
SEQDICT=/home/xz2680/Resources/GATK/b37/human_g1k_v37.dict
# When liftover is enabled, must include FASTA for sequence lookup after backward liftover
# This file may be different FASTABACK in LIFTOVER, because when --nochr was enabled
# chromsome name will be different
FASTABACK=ZZZ


[DEEPVARIANT]
# There will be command line syntax change since version 0.8.0
#VERSION=0.7.2
VERSION=0.8.0
Docker=YES
MODEL=/home/xz2680/Software/DeepVariant/DeepVariant-inception_v3-0.8.0+data-wes_standard/model.ckpt

# Provide BINPATH when Docker==NO
#BINPATH=/home/ubuntu/miniconda3/envs/py36/share/deepvariant-1.0.0-0/binaries/DeepVariant/1.0.0/DeepVariant-1.0.0
#MODEL=/home/ubuntu/miniconda3/envs/py36/share/deepvariant-1.0.0-0/models/DeepVariant/1.0.0/DeepVariant-inception_v3-1.0.0+data-wes_standard/model.ckpt

[CONDA]
INIT=/home/xz2680/anaconda2/etc/profile.d/conda.sh
ENV=py36


[BASH]
jobs=40
#ExtractBAMs.jobs=10
