# Specify the input path and format
# DNV called from multiple input sources should be merged by merge_vars.pl utility.
# merge_vars takes union of input variants and input file fields, and adds two columns SampGroup and VarGroups
# representing sample groups and variant call groups for each DNV
[Input]
File=UnionVarTable
# Standard field names for IID,CHR,POS,REF,ALT in input file
VarFileds=IID,Chrom,Position,Ref,Alt
# Field names for SampGroup and VarGroup
# Note: VarGroup will be modified after running dnv_merge to indicate evidence gathered from multiple input sources
# Because SampGroup is not used, we can also provide only one field for VarGroup
GroupFields=SampGroup,VarGroup


# Specify the path and format for the var_table output files
[Vartab]
# Directory containing var_table outputs for input DNVs
# Tabulated varaints for each input source should be written in Label.txt, where Label is the group label for an input source
# ALL files in this directory will be used.
# It is possible to have more input sources here than used for initial DNV calling.
Dir=VarTabPipelineOut
# Variant tables can also be a list.
List=VarTabList
# Fields for uniquely identify a variant from the table
# When IID is not specified, the filter will performed on variant level only
VarFields=IID,Chrom,Position,Ref,Alt
# It is possible to customize fields for table from certain Group
#VarFields_Group=

# If we have accounted for duplicated sample when tabulating variants, some fields with individual genotype level 
# information are likely to have multiple values.    
# Here we should list these fields if they are used in the filter expression below, because they need to be split for
# duplicates (required by expand_dat function)
GenoFields=GENO.Offspring,GT.Father,GT.Mother
# Fill-in if fields specified above may sometimes have different length for duplicates.
GenoFillin=Y
# 
# If group-specific filters are used below, genotype fields that need to be split for dup should be listed for that group only
# Group should be replaced by the actual group name
#GenoFields_Group=
#GenoFillin_Group=

# Specify how to deal with duplicated sample: All, Any, Ignore(First), Last
# It can be multiple values in a genotype fields due to twins/tech duplicates,
# It can also be multiple entries of the same variant in a variant table
# If we consider filter evaluates to true if ANY one of the duplicate is true, set DupAction to Any
# If we consider filter evaluates to true if ALL duplicate is true, set DupAction to ALL.
DupAction=Any

# Filtering expression
# If a variant *DOES NOT* meet the criteria given the following filter, they will be considered failed "contradictory filter"
# For each filter, a filter name is provided to be used in error output to indicate failure reason
Filter="FAM_AC <= 2"
FilterName=HighFamAC

Filter="GT.Mother == '0/0' && GT.Father == '0/0'"
FilterName=ParentNonRef

# Customized filter for certain group
Filter_GATK="MQ>40 & SOR<6"
FilterName_GATK=LowMQHighSOR

Filter_GATK="Father.AB.ALT>0.05 | Mother.AB.ALT>0.05"
FilterName_GATK=HighParentABAlt

# How to deal with multiple filters: All or Any
# If we consider a variant failed filter if it DOES NOT PASS ALL, set MultiAction to All
# If we consider a variant failed filter it it DOES NOT PASS ANY, set MultiAction to Any
MultiAction=All

[Output]
# Extra field in the error output to list the names of filters that a DNV did not pass in each group of input sources.
ErrField=FailReasons

