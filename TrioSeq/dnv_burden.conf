# 
# Specification for the format of variant table and definition of different variant classes
#
[Variant]
# Variant table is in tab separated text format generated by the annotation pipeline
# It is possible to have multiple variant files (e.g. when we need to combined data from different studies)
# If multiple variant tables are specified, they should follow the same specifications 
# listed below to link variant to genes and samples and to define variant classes
Table=DNVTable.txt

# It is also possible to specify an optional over-all variant level filter
# here we only consider rare de novo variants that have <0.1% PopAF
Filter='(ExAC_ALL=="." | ExAC_ALL<0.001) & (gnomADexome_ALL=="." | gnomADexome_ALL<0.001)'

# A list of potentially bad variants to be removed.
# Format: VarID IID, if IID is omitted, then all variants matching VarID will be removed
#Exclude=BadVariants.txt

# We will make use of the following fields in the variant table.
# Chrom,Position,Ref,Alt: the four fields will be used to uniquely specify a variant.
# GeneID will be used to look up baseline mutation rate for each gene, gene set membership, and genomic location
# Note: although most gene sets are available as gene names, we prefer to use gene IDs to keep
# consistency across all analysis pipeline. Users should prepare appropriate gene sets.
# Given all the above fields are standard fields from the annotation pipeline, 
# we don't need to specify them here except sample ID.

# SampID will be used to link to sample info for defining sub-groups of samples
SampID=IID

# Variant classes
# We will need to deal with the situation when a variant was annotated to multiple genes
# Different functional effects to overlapping genes will be an issue to burden analysis
# We have already included by default two exclusion lists for read-through gene and transcript in the annotation
# pipeline to reduce this effect. Additional exclusion list can be specified in Gene section.
# For example, we can further remove genes without latest HGNC symbols, or genes found in variants
# with too many effects piled up. The appropriate exclusion list should have removed most of overlapping genes.
# To deal with remaining overlapping genes, we can use following conventions
# 1. We require the synonymous variant should have the same functional effects across all genes.
#    And for missense or LoF variant, it only need to affect one gene. Or in other cases, we can simply pick up the 
#    first effect. So we should have a suffix (Any, All, First) to each variant class label. 
# 2. If two genes were in different gene sets, then in separate gene sets they will not be considered as overlapping
# Order Matters!
# Note that we should list variant class from the most severe to the least severe in the following definitions
# This priority rank will be used when there are multiple nearby variants in the same gene (see DistCutoff),
# in such circumstances, we will pick up the one with the most severe effect associated with the gene.
Class=LoF:Any
Class_Filter='GeneEff=~"splice_(acceptor|donor)" | GeneEff=="frameshift" | GeneEff=="stop_gained"'
Class=Dmis_MPC2:Any
Class_Filter='GeneEff=="missense" & MPC!="." & MPC>=2.0'
Class=Dmis_CADD25:Any
Class_Filter='GeneEff=="missense" & CADD13!="." & CADD13>=25.0'
Class=Missense:Any
Class_Filter='GeneEff=="missense"'
Class=SpliceReg:All
Class_Filter='GeneEff=="splice_region"'
Class=Silent:All
Class_Filter='GeneEff=="synonymous" | GeneEff=="start_retained" | GeneEff=="stop_retained"'
# If a variant is not annotated to any gene, it can still be defined as beloning to a noncoding class
# with additional filtering criteria like evolutionary conservation. In this case, we can specify in the gene section
# to include variants not annotated to any gene.
Class=ConsNC:All
Class_Filter='GeneEff=="." & PhyloP>2.0'


# If variants not annotated any genes are to be kept in summary and comparison
# These class will be used in direct comparison between groups.
# Note: nearby variant cluster also applies to variant class not associated with any gene.
# These variants will be assigned to a dummy gene "." which does not belong to All or any gene set 
# They will be listed as separetely and not associated with any gene set.
# Note: if variant is annotated to blacklist genes, such variant will still be removed from defining
# variant class not associated genes.
ClassWoGene=ConsNC


# The distance cutoff (less than or equal to) for defining the same mutational events
# For each individual, we will only pick up one variant with most severe effect among those nearby variants in the same gene
# Operationally, all nearby variants in the same gene will be stored in graph. We will find connected components 
# and pickup the one with most severe consequences
# If nearby variant removal is enabled, the order of variant classes defined above will be used as priority.
# MNVs should be resolved before use this function.
DistCutoff=50


# Sample level information
[Sample]
# Samp size must be specified when sample table is not available, or it is used to validate sample table
# It should be the number of final cleaned sample after applying sample filter and sample inclusion/exclusion list
# It should include both pair of twin/sibs. But tinal sample size used for analysis will adjust twin pairs.
# It can also be group-specific sample sizes format like All:564,Complex:200,Isolated:100
Size=465
# Sample table, must be tab-separated
# This table is required to define sample subtypes.
# When sample table is not provided, we will look for sample info from variant table
# In such cases, sample size in variant will typically be smaller than real sample size because there are samples 
# without DNVs and in this case we need to speicify the correct sample size for analysis.
Table=SampInfo.txt
# Sample ID appear in the sample table
SampID=IID


# Overall sample table filter
Filter='Pheno!="Unaffected"'
# A list of bad samples to be excluded
Exclude=BadSamps.txt
# A list of good samples to be included
Include=GoodSamps.txt

# We deal with twins and siblings in the following ways:

#	sample group,  
#	only once as well. For full sibs, they will be treated as different samples, but shared de novo
#	variants will be counted once because they are most likely result from the same parental 
#	germline mosaicism. 

# Those variants will be added to the same twin pair if both pair are
#	in the same group, but will added to sampe-specific count when twin pair are in different groups.


# For MZ twin pairs, if both are in the same group, they will only be counted once.
# Mutations shared by the MZ twin will be counted only once as well. 
# If twin pairs are in different group, then both sample and mutation will add one count to each group. 
# In de novo calling process, we may treat twins as tech dups to increased power of calling de novo
# variants. So we may need to retrospectively examine the mutations in twins to find potential post-zygotic
# mosaicism specific to one twin. 
Twins=MZTwins.txt

# Sibs should be treated as distinct samples
# But de novo variants shared by sibs are from the same parental mosaic mutation
# Sib shared DNVs are counted once if both sibs are in the same sample group.
# When sibs are in different groups, they will add mutation counts to both groups.
Sibs=FullSibPairs.txt

# Sex must be M/F or Male/Female
# Sample sex information is only used to scale chrX mutation rate
# If sample sex composition is a confounder in comparison between groups,
# variants from chrX should not be included in between group comparison
Sex=Sex
# If sample with unknown sex is allowed, when some or all sample have unknown sex, 
# we will impute the total sample size for male and female. This is typically used 
# for published data when sample level information is not complete. 
AllowNoSex=Y
# If no sample table is provided or when sex information is not available 
# we can make use of this proportion to determine the sample size of males/females. 
PMale=0.809

# Sample groups definition
# If we want to include all samples, specify a dummy filter that always evaluates to true 
# Burden will be analyzed separately for the groups of samples defined here
# Note: "All" will not be automatically created by default!
#		This is different from gene sets, in which "All" will be defined automatically based 
# 		on mutation rate table after applying inclusion/exclusion list.
Group=All
Group_Filter='IID!=""'
Group=Complex
Group_Filter='ID=="TRUE" | EP=="TRUE"'
Group=Isolated
Group_Filter='ID=="FALSE" & EP=="FALSE" & ADHD=="FALSE"'
Group=Affected
Group_Filter='Pheno=="Affected"'
Group=Unaffected
Group_Filter='Pheno=="Unaffected"'

# Specify pairs of samples subsets for direct comparison
# All variant classes regardless of having baseline mutation rate or not will be included for
# between-group comparisons
Compare=Female:Male
Compare=Complex:Isolated
# Can also be comma seaprated
#Compare=Female:Male,Complex:Isolated


# Gene and gene sets
# The full gene list ("All") included in the burden analysis will be those included in the mutation rate table
# minus those specified in the backlist. 
[Gene]
# Blacklist (should contain gene IDs)
# Here we exclude qr/^(OR\d|MUC\d|HLA-)/ genes.
Exclude=/home/xz2680/Dropbox/Data/GENCODE/GencodeV19GeneTable_HGNC20180722_MUC-HLA-OR_blacklist.txt
# The burden analysis can be restricted to a subset of genes by providing an inclusion list
Include=InclusionList.txt


# Human genome assembly build version for the variants, it will be used to determine haploid chrX regions
# Must be provided!
HgBuild=hg19
# Gene DBTable will be used to look for genomic locations of each gene, it can be either a UCSC database table name
# or downloaded gene table in genePred format. The 13rd column must be ID that are matched to GeneID column of the variant table.
# Here we use UCSC hg19's ensGene table, it is based on Ensembl release 75 which is the same version used by GENCODE v19.
#DBTable=ensGene
DBTable=/home/xz2680/Resources/UCSC/hg19/database/ensGene.txt.gz

# Defining gene sets
# There are five different ways to define gene sets, details can be found in anno_cnvs.conf
# Here we use two columns from per-gene mutation rate table: GeneID and pLI, and define gene sets
# based on cutoffs for pLI
Set=/home/xz2680/Dropbox/Data/Share/SPARKPilot/Misc/hg19_mutrate_3mer_SPARKPilot.txt
Set_Fields=GeneID,'pLI!="." & pLI>=0.5':Constrained,'pLI=="." | pLI<0.5':NonCons
# We can also define gene sets based on the categorical values 
#Set=GeneSetTable2
#Set_Fields=1,2


# Baseline mutation rate table
# Mutation rate should be defined for each gene. It can be prepared by gene_mutrate.pl.
[MutRate]
# Genes with mutation rate will define the full list of genes
# Additional genes to be removed can be specified above in the blacklist genes
Table=/home/xz2680/Dropbox/Data/Share/SPARKPilot/Misc/hg19_mutrate_3mer_SPARKPilot.txt
# Fields for gene IDs linked to other files
GeneID=Gene
#GeneID=GeneID

# Mapping variant classes defined above to columns in the mutation rate table  
# Variant class with baseline mutation rate defined in the table will be used in O vs E test.
VarClass=Missense:Mu_Missense,Dmis_CADD25:Mu_Dmis_CADD25,Dmis_MPC2:Mu_Dmis_MPC2,Silent:Mu_Silent
# It is also possible to specify combinatorial class based on arithmetric operation of multiple columns
VarClass=LoF:2.3*Mu_Nonsense+Mu_SpliceSite
# Variant class mapping to mutation rate column can be packed in one line or repeat multiple times


# Indicating that mutation rate are on the log scale
log10=N
# Missing data, when in log scale, zero mutation rate will be NA
NAstring=NA
# The ratio of mutation rate in male germline vs female germline.
Alpha=3.4
# Replace the null mutation with a number arbitarily small (some downstream tool likely extTADA need non-zero mutation rate)
Zero=1e-15

# Need to specify how to scale the mutation rate
# It can be a pre-specified factor
#Scale=0.95
# It can also be a "SampGrou,VarClass" combination. And the mutation rate will be scaled so that 
# observed variants in VarClass of SampGroup will match the expectation predicted by mutation rate.
# Note: gene set information will not be used here.
# The scaling factor will be shown in the command line output.
Scale=All,Silent
 
# Gene level output table 
# Remove this section if gene table is not required
[GeneTab]
# Select sample groups and variant classes to appear in the gene table
# The actual column names will be SampGroup_VarClass_Count (and SampGroup_VarClass_MutRate if baseline mutation rate is available)
SampGroup=All
VarClass=LoF,Dmis_CADD25,Silent,SpliceReg

# Extra-gene level information to appear in gene-based table
# Specify the fields to link additional gene level information
# Same as used in anno_seqvars
GXref=/home/xz2680/Dropbox/Data/GENCODE/GencodeV19GeneTable_HGNC20180722.txt
GXref_Fields=EnsemblID,HGNC
GXref=/home/xz2680/Dropbox/Data/GeneMetrics/ExAC_r0.3.txt
GXref_Fields=GeneID,pLI


# Sample level output table.
# Remove this section if sample table is not required.
# Note in this sample-specific table, DNVs in both twins and sibs will be counted
# Nearby variants with less severe effects will still be removed.
[SampTab]
# Select gene sets and variant classes to appear in the sample table
# The actual column name will be GeneSet_VarClass_Count in the output
GeneSet=Constrained
VarClass=LoF,Dmis_MPC2

# Extra-sample level information to appear
SXref=SampInfo.txt
SXref_Fields=IID,Sex,CogImpair



