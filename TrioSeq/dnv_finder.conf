[Genome]
# The genome assembly build
# It will be used to determine the non-PAR region on chrX
# Because chrX genotypes may have different filtering criteria 
Build=hg19
# Reference genome sequence file, it will be used in indel normalization (https://genome.sph.umich.edu/wiki/Vt#Normalization)
# The output variants from this script are normalized by default
Fasta=/home/xz2680/Resources/GATK/b37/human_g1k_v37.fasta
# Regions of interest
# BED file containing regions of interest, can be overriden by --bed option
#Region=XXX
# The following chromosomes in VCF file will be ignored
IgnoreChr=Y,chrY,MT,chrM


[Pedigree]
# Path to the pedigree file, can be overriden by the command line option
File=XXX
# Regex pattern for duplicated sample IDs, duplicated sample should have the 
# same sample ID as original sample after removing this pattern.  
Ignore='_Re\d*$'
# Duplicated samples will be accounted for in de novo finder 
# Specify how to deal with duplicated samples, only in effect with Ignore pattern is given above
# Three options
# Any: require any of the sample meet the genotype filtering criteria (default)
# All: require all samples meet the crteria, this is more strigent
# Ignore: ignore duplicated sample in the filtering
DupAction=Any
# A list of MZ twins pairs, they will also be treated the same wasy as dups in DNV calling
# While treating twins as dup increased sensitity, we will need to examine the concordance 
# of DNV calls in twins to find likely mosaic events, and keep such events to the carrier only
#Twins=YYY


[Module]
# Module for customizing additional fields from VCFs on the fly.
# See documentation in the module file for details on customized fields.
File=/home/xz2680/Pipelines/TrioSeq/module/VCF.pm
# List additional fields and their types created by the custom subroutines
# It can also be used to override existing field types in VCFs
# For field types, see VCF documentation
Site=FAM_AC:A,FAM_AF:A,FAM_AN:1,NONMIS:1,FNONMIS:1
Geno=AD:R,AB:R


# Field types are used in validating the data 
# Fields will be expanded based on their types:
# For field of type "1", no expansion.
# For field of type "A", it has one value for each alt allele, no expansion is needed
# For field of type "R", it expands to Field.ALT and Field.REF for each alt allele
# For field of type "G", it expands to Field.HOMREF, Field.HET, Field.HOMALT for each alt allele (assuming diploid)
# For field of type "n" (number >=2), it expands to Field.1, Field.2, ..., Field.n
# For field of type ".", no expansion, because one cannot know how many values will be seen from this field in advance. 

# Specify site level filters
# We can have a default filter that applies to all types of variants
# and also have additional customized criteria for SNV/MNV/Indel
# When both overall filter and type-specific filter are defined, both should be passed for a variant to pass the site filter,
[Site]
# AC can be taken from VCF but does not account for related samples, here we use customized FAM_AC 
Filter="FAM_AC<=1 || FAM_AF<0.001"
#Indel_Filter="FAM_AC<=4"

[Geno]
# Specify filters on genotypes for offspring and parents
# Note 1: for AB, we may also have an upper bound for AB for variants in autosomes.
# But there may be situations when a mutation occur in deletion 
# Note 2: We may need different threshold for SNV and indels, but this increased
# the complexity of the pipeline. Instead, a generally applicable filter will be applied
# to different types variants, and further downstream filter can be done by applying
# DeepVariant. 
# Note 3: For chrX, especially in WGS data, we may need a different filter for Haploid
# chromosome regions. This is customizable by giving additional filtering rules.
# If this option is enabled, it require sex information from the PED file.
# Sex=1 means single copy of chrX in non-PAR region. 
Offspring="AD.ALT != '.' & GT != '.' & GT != '0/0' & AD.ALT>=6 & AB.ALT>=0.2 & GQ!='.' & GQ>=60"
Parent="AD.REF != '.' & GT == '0/0' & AD.REF>=10 & AB.REF>=0.975 & GQ!='.' & GQ>=30"

# We relax the requirement for Haploid chromosomes
# May further relax for WGS data?
Haploid_Offspring="AD.ALT != '.' & GT != '0/0' & AD.ALT>=5 & AB.ALT>=0.7 & GQ!='.' & GQ>=40"
Haploid_Parent="AD.REF != '.' & GT == '0/0' & AD.REF>=8 & AB.REF>=0.975 & GQ!='.' & GQ>=20"


# Specify the fields in the output tables
# The fields must be original or customized from the VCF.
# Fields with type R, G must be expanded (see explanation above)
# A subset of those fields must also be used in the filtering expression
[Output]
# Output file will start with six standard samp info fields: FamID IID Father Mother Gender Pheno
# They are followed by site-level fields
# Field names are comma separated, field name can be renamed by an alias specified after colon
Site=CHROM:Chrom,POS:Position,REF:Ref,ALT:Alt,FILTER:Filter,FAM_AC,FAM_AN,FAM_AF,VQSLOD,QD,MQ,FS,MQRankSum,ReadPosRankSum
# Then genotype level fields
# Genotypes from offspring/father/mother will be presented separately, with suffix .Offspring/Father/Mother appended to the field names
Geno=GT,AB.REF,AB.ALT,AD.REF,AD.ALT,DP,GQ,PL.HOMREF,PL.HET,PL.HOMALT
# Misising data character
NAChar=.
# When dup or MZ twin are found, the resulting column will include multiple values separated 
# by the separator specified here. Comma is recommended. 
SepChar=,

