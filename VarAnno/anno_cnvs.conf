# Paths to data and software
[Path]
# VEP path
VEP=/home/xz2680/Software/VEP/vep
# VEP cache directory
VEPDB=/home/xz2680/Resources/VEP/cache

# Input variant file specifications
[Input]
File=CNVTable.txt
# Key fields, must be renamed to Chrom,Start,End,Type
Fields=Chr:Chrom,Start(hg19):Start,Stop(hg19):End,Del/Dup:Type
# HG version (only human variants on hg19 and hg38 are supported now)
# will be translated to NCBI version for VEP
HG=hg19
# Additional fields in the input file to be retained in the output
# They will appear VEP annotations
XtraFields=Mechanism,Parent-of-origin:POO,Rare0.1,Validated


# Default and optional fields added after VEP
# VarID,IID,Chrom,Start,End,Type,Size,GeneCount,Symbols,GeneIDs,GeneEffs,TransCounts,TransIDs,TransBiotypes,TransEffs,TransOverlaps,TransExons

[Sample]
# Sample ID field in the input file
# This field from the input will also be retained in output, but appear at the *beginning* of the output
# If more than one fields is provided, only the first will be used as ID field
# Remainings will be appended to the output and not used for cross-reference
IDField=PatientID,Simplex/Multiplex:FamType,Phenotype,Gender
# Sample info table
# The frst column should contain sample ID in the external table, and will be linked to sample ID in variant table
# Samp table repeat multiple times, make sure additional field names are unique and do not conflict with other fields in output
#IXref=SampInfo
#IXref_Fields=IID,Gender,Pheno


# We use VEP for gene-level annotations (no plugin or custom annotation is used)
#
# Default fields to be generated after baseline annotations:
#
# VarID - CNV ID, "Chrom:Start-End_Type"
# Chrom,Start,End,Type - Genomic range and type of the CNV
# Length - CNV length in BP
# Size - Human readable size for CNV.
# GeneCount - Number of annotated genes in the next field
# GeneIDs - List of gene IDs 
# Symbols - List of gene symbols the same order as GeneIDs (enabled by --symbol option)
# GeneEffs - CNV effects to genes, taken from the most severe effects from all transcripts.
# TransCounts - Number of transcripts in each gene that are annotated
# TransIDs - List of transcript IDs that are annotated
# TransBiotypes - Transcript biotypes
# TransEffs - CNV functional effects to each annotated transcript
# TransExons - Affected exons in each annotated transcript

# GeneIDs, Symbols, and TransCounts are displayed in full. 
# Intersting genes will be highlighted by defining gene sets below. 

# Genes are sorted based on the frequency of CNV functional effect to gene from least to most frequent. 
# When multiple genes are affected, genes annotated with most frequent effects will appear at the end of 
# of the list, and their functional effect will be collapsed in GeneEffs.  For example, if a deletion 
# overlaps with 10 genes including partial deletion of two genes at both ends. Then the two genes at both 
# ends will appear first in GeneIDs list then followed by the other eight. In GeneEffs, the effects to genes 
# will be shown in the same order as GeneIDs and the effects to the eight genes with entire deletion 
# (transcripts_ablation) will only show once ("collapsed") at the end. In this way, we remove the redundant
# annotations but also higlighted genes that are partially affected and may worth close inspection.
# All other gene level annotations will be shown in the same order as GeneIDs.

# A similar strategy is used to order transcript level annotations within genes. Transcripts are sorted 
# based on the frequency of concatenated value of "CNV functional effects, list of affected exons, and biotype"
# from least to most common. Transcript annotations with most frequency "effect-exons-biotype" combination
# will be collapsed. If all transcripts of a gene can be collapsed, the list of transcript IDs will be replaced
# by '...' to further simplify the output.

[VEP]
# Customize the VEP cache version
# It is generally not recommended for changing VEP cache version, because different releases
# may have different data structure that are incompatible with the perl API.
#DBVer=
# Options for running VEP
# Default options include "--gencode_basic --symbol --transcript_version --biotype --numbers"
# If option is specified here, the default will be overriden, be careful about compatibility with other annotation sources
Option=
# Only output functional consequences w.r.t. the coding transcripts (Yes/No/True/False)
Coding=TRUE
# Rank cutoff (see collect_vepout for details), default 18 is suitable for annotating coding variants
RankCutoff=18


[Gene]
# Specify a list of excluded genes (by ensembl ID, wo version number)
Exclude=/home/xz2680/Repository/Genes/GENCODE/Processed/GencodeV19_ReadthroughGenes.txt
#Include=

# Link additional gene level information by GeneID
# Note that these additional gene level information will not be trimmed as we did with GeneEff
# So only include most relevant information to avoid packing up too many things
GXref=/home/xz2680/Repository/Genes/HGNC/Processed/GencodeV19GeneTable_HGNC20180722.txt
GXref_Fields=EnsemblID:GeneIDs,HGNC:HGNCs
# Also consider the use of gene higlighting function below.

#
# To highlight genes within CNVs, we will first need to define gene sets.

#Gene sets can be read from files in the following *FIVE* ways:
#1. A list of gene in a given column of a table file
#	File=FilePath(:SetName)    <-- FilePath cannot contain [:]; SetName is optional, default to file basename without suffix
#	Fields=ColName or ColNum   <-- ColName cannot contain any of [,"']
Set=/home/xz2680/Repository/Genes/Constraint/SamochaKE2017/TabS4_MisConsRegs.txt:MCRGenes
Set_Fields=gene_id
#2. Genes categorized in a table file
#	File=FilePath
#	Fields=GeneID,GeneClass    <-- GeneClass must be a categorical variable, set names will be defined by the values of GeneClass
#Set=/home/xz2680/Repository/Genes/Autism/SFARI/release_2019-11-13.txt
Set=/home/xz2680/Repository/Genes/Autism/SFARI/release_2019-08-29.txt
Set_Fields=GencodeV19ID,GeneScore
#3. Subset of genes defined by SQL like filtering expression in a gene table
#This method is more flexible than 2 to define and select gene sets
#	File=FilePath
#	Fields=GeneID,"Filter Expression 1":SetName1,'Filter Expression 2':SetName2
#    <-- Filter expression are quoted and followed by an optional gene set name.
Set=/home/xz2680/Dropbox/Data/GeneMetrics/ExAC_r0.3.txt
Set_Fields=GeneID,'pLI>=0.9':HipLI
Set=/home/xz2680/Repository/Genes/DDG2P/DB/DDG2P_3_10_2019_wGeneID.tsv
Set_Fields=gecnodev19_id,'allelic_requirement=~"(monoallelic|hemizygous|x-linked dominant)" & organ_specificity_list=~"Brain"':DomNDD
#4. Gene sets defined by GMT file (must have .gmt extension to the file name)
#	File=filepath    <-- Can select one or more sets here
#	Fields=SetName1:Alias1,SetName2:Alias2   <--may be left empty to include all gene sets in GMT file
Set=/home/xz2680/Repository/Genesets/MSigDB/v6.2/c2.cp.biocarta.v6.2.gencodev19.gmt
Set_Fields=BIOCARTA_NEUROTRANSMITTERS_PATHWAY:NeuroTrans
#5. Gene sets defined by GMX file (must be an excel file)
#	File=FilePath(:1)    <--Should be sheet number after file name
#	Fields=SetName1,SetName2:Alias2 <- Should set names defined in the first row
Set=/home/xz2680/Repository/DNVs/ASD/DeRubeisS2014/TableS5_Fig1bGenes.xlsx
Set_fields=Official gene name (HUGO):ASD2014dnGenes

# Then we will optionally define "super sets" that aggregate several sets together
# or specify the sets whose genes to be higlighted. Each super set will be one output file column.
# For example: SuperSet=DDG2P_CNS:KnownGene,SFARI1or2:KnownGene,PrevTADA:KnownGene,Constrained:Cons
# We aggregate three gene sets to form a KnownGene column, and constrained genes will be a second column.
# If we have an aggregated set in the output, the individual gene set label will be accompanied by the 
# gene name. E.g. CHD8(SFARI_1or2,PrevTADA,DDG2P_CNS),ITSN2(PreTADA)...
SuperSet=MCRGenes:Constrained,HipLI:Constrained,DomNDD:KnownGenes,1:KnownGenes,2:KnownGenes,1S:KnownGenes,2S:KnownGenes

# Note, we will only lookup gene sets by GeneIDs. To show the highlighted genes,
# we will need to display gene names. By default we use Symbol column. If other gene
# names are provided via additioal gene level information, we can specify these names.
# Highlighted genes column will appear after this original column
Highlight=Symbols
#Highlight=HGNCs


[Transcript]
# A list of transcripts to be excluded from annotation (by ensembl ID)
# Depending on the VEP option, the transcript may or may not include version number
Exclude=/home/xz2680/Repository/Genes/GENCODE/Processed/GencodeV19_ReadthroughTrans.txt
#Include=
# List all transcript IDs to VEP output, default is FALSE to make output more concise.
# When Full=FALSE, when all annotated transcript of a gene have the same annotations,
# transcript IDs will be replaced by "...".
Full=TRUE
# When Full is TRUE/YES, additional transcript level information can be added


# Regional overlaps
# This section provide data resources and options to overlap CNVs with genomic features that include CNVs 
# from other cohorts, known dosage sensitive regions, cytoband or any other genomic intervals, and summarize 
# the overlapping results.
[Overlap]
# Because of the non-uniform distribution of SNP probes or exome targets, the resolution of CNV calls
# are influenced by the probe or target density. It creates an issue when overlapping CNV calls with 
# genomic features. For CNV calls from SNP array or exome, probe file can be used as backbone of CNVs 
# and all other genomic features, and length of any genomic intervals can be measured in number of probes. 
# The overlap proportion can also be measured in fraction of probes, and will be more robust to the 
# influence of non-uniform distribution of probes.
# Probe file can be PFB file for PennCNV input or BED file for exome targets. 
ProbeFile=/home/xz2680/Resources/CaptureKits/Processed/xGEN_targets.b37.bed

# Four fields are required for processing each set of genomic features:
# A database file of genomic intervals, keys fields used for parsing,
# cutoffs of overlapping proportions, and operations to summarize the overlapping results.  

# DBfile must be tab separated text format 
DBFile=/home/xz2680/Dropbox/Data/GenomeRegs/Cytoband.hg19.txt
# Key fields in DBFile should include columns that defines a genomic interval (must be renamed to Chrom,Start,End).
# And if DBfile stores CNVs and overlap feature is required to match CNV type of input, field name for CNV type
# should be provided and renamed to (Type). All other fields are used in group operations.
DBFile_Fields=1:Chrom,2:Start,3:End,4:Band,5:Stain
# Group-by operation to summarize the output, the syntax is "function1(Field1,Field2):OutField1;function2(Field3):Outfield2"
# Supported group-by functions can be found in https://bedtools.readthedocs.io/en/latest/content/tools/groupby.html
# It is possible to have one or more fields (separated by ",") as input for the group-by function
# Multiple functions can be separated by ";".
DBFile_Operation=distinct(Band):cytoBand
# Overlap options: # Must have three required keys: Target, Query, and Probes 
# They are cutoffs for overlap proportion for target (CNV in database) and query (CNV in input)
# and indicator for using probes or not.
DBFile_Overlap=Target:0,Query:0.5,Probes:No

# Overlap with morbidity map
# Specify database and column operation to appear in the output
DBFile=/home/xz2680/Repository/CNVs/MorbidMap/CoeBP2014/TableS2_TableS3_KnownPathoCNVs_Refined.txt
# Specify standard columns of the database file to be parsed for annotation
DBFile_Fields=Chrom,Start(hg19):Start,End(hg19):End,DeletionSyndrome,DuplicationSyndrome
# Specify operations to summarize the overlapping intervals
DBFile_Operation=first(DeletionSyndrome,DuplicationSyndrome):PathoCNV_MorbidMap
# Specify proportions required to find overlaps and whether or not to use probes as backbone
DBFile_Overlap=Target:0.5,Query:0,Probes:No

# Overlap with CNVs in population cohort. 
DBFile=/home/xz2680/Repository/CNVs/MorbidMap/CoeBP2014/dbVarRefmt/CtrlCNVs.b37.txt
DBFile_Fields=Chrom,Start,End,Type,IID
DBFile_Operation=count_distinct(IID):CtrlFreq_Coe2014
DBFile_Overlap=Target:0.5,Query:0.5,Probes:No

DBFile=/home/xz2680/Repository/CNVs/MorbidMap/CooperGM2011/dbVarRefmt/CtrlCNVs.b37.txt
DBFile_Fields=Chrom,Start,End,Type,IID
DBFile_Operation=count_distinct(IID):CtrlFreq_Cooper2011
DBFile_Overlap=Target:0.5,Query:0.5,Probes:No





